{"version":3,"sources":["utils/router.ts","components/Header.tsx","constants/index.ts","calculations.ts","constants/emojis.ts","components/PrestigeMultiplierCard.tsx","components/MaxMultiplierForm.tsx","components/RequiredPPForm.tsx","components/Page.tsx","components/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["createRouter","maxMultiplier","defineRoute","pp","param","query","optional","number","requiredPP","lvl","mult","RouteProvider","useRoute","routes","activeNavLink","inactiveNavLink","activeMobileNavLink","inactiveMobileNavLink","Header","children","route","as","className","open","src","alt","link","name","Button","aria-hidden","Panel","aria-controls","moneyPerPrestige","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","initialPrestigeMultCosts","qty","cost","multPerPrest","multiplierIndex","100","cheapestMultiplierOption","costs","reduce","cheapest","multOption","incrementMultiplier","updatedCosts","prevMultVals","newCost","minPrestigeToGetMult","wantedMultiplier","prevCost","mults","prestige","multipliers","cheapestMult","cheapestMultiplier","maxCost","isValidValue","v","undefined","sort","a","x","values","maxMultFromPrestigePoints","points","subsequentIteration","multiplier","remainingPrest","briefcasesForPrestige","toString","length","PRESTIGE","PrestigeMultiplierCard","map","i","multSize","MaxMultiplierForm","urlPP","params","useState","startingPrestige","setStartingPrestige","useEffect","replace","maxMult","console","table","m","htmlFor","type","id","placeholder","value","onChange","e","userNum","Number","target","isNaN","toLocaleString","toFixed","RequiredPPForm","goalMultiplier","setGoalMultiplier","currentLevel","setCurrentLevel","level","minPrestige","userLevel","Object","keys","Page","Footer","href","rel","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"+LAEmDA,YAAa,CAC9DC,cAAeC,YACb,CACEC,GAAIC,IAAMC,MAAMC,SAASC,SAE3B,iBAAM,cAERC,WAAYN,YACV,CACEO,IAAKL,IAAMC,MAAMC,SAASC,OAC1BG,KAAMN,IAAMC,MAAMC,SAASC,SAE7B,iBAAM,mBAZKI,E,EAAAA,cAAeC,E,EAAAA,SAAUC,E,EAAAA,O,eCMlCC,EACJ,kEACIC,EACJ,4FAEIC,EACJ,0EACIC,EACJ,oGAEWC,EAAoB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5BC,EAAQR,IAEd,OACE,gCACE,cAAC,IAAD,CAAYS,GAAG,MAAMC,UAAU,cAA/B,SACG,gBAAGC,EAAH,EAAGA,KAAH,OACC,qCACE,qBAAKD,UAAU,yCAAf,SACE,sBAAKA,UAAU,yCAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKA,UAAU,UAAUE,IAAI,aAAaC,IAAI,SAEhD,qBAAKH,UAAU,kBAAf,SACE,sBAAKA,UAAU,sCAAf,UACE,6CACMT,EAAOZ,gBAAgByB,MAD7B,IAEEJ,UACiB,kBAAfF,EAAMO,KACFb,EACAC,EALR,6BAUA,6CACMF,EAAOL,aAAakB,MAD1B,IAEEJ,UACiB,eAAfF,EAAMO,KACFb,EACAC,EALR,kCAcN,qBAAKO,UAAU,uBAAf,SAEE,eAAC,IAAWM,OAAZ,CAAmBN,UAAU,sNAA7B,UACE,sBAAMA,UAAU,UAAhB,4BACCC,EACC,cAAC,IAAD,CAAOD,UAAU,gBAAgBO,cAAY,SAE7C,cAAC,IAAD,CAAUP,UAAU,gBAAgBO,cAAY,mBAM1D,cAAC,IAAWC,MAAZ,CAAkBR,UAAU,YAA5B,SACE,sBAAKA,UAAU,mCAAf,UACE,cAAC,IAAWM,OAAZ,yBACEP,GAAG,KACCR,EAAOZ,gBAAgByB,MAF7B,IAGEJ,UACiB,kBAAfF,EAAMO,KACFX,EACAC,EAENc,gBAAc,MARhB,6BAYA,cAAC,IAAWH,OAAZ,yBACEP,GAAG,KACCR,EAAOL,aAAakB,MAF1B,IAGEJ,UACiB,eAAfF,EAAMO,KACFX,EACAC,EANR,qCAiBV,wBAAQK,UAAU,kBAAlB,SACE,qBAAKA,UAAU,8CAAf,SACE,oBAAIA,UAAU,mCAAd,SACkB,kBAAfF,EAAMO,KAA2B,iBAAmB,oBAI3D,+BACE,qBAAKL,UAAU,yCAAf,SAAyDH,U,eCxGpDa,EAAmD,CAC9DC,EAAG,KACHC,EAAG,KACHC,EAAG,MACHC,EAAG,MACHC,EAAG,IACHC,EAAG,MACHC,EAAG,OACHC,EAAG,OACHC,EAAG,OACHC,GAAI,IACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OACJC,GAAI,IACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,IACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,MACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,KACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,KACJC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,GAAI,MACJC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,GAAI,OACJC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,GAAI,SACJC,GAAI,OAGOC,EAAyD,CACpE,CAAC,EAAG,CAAEC,IAAK,EAAGC,KAAM,GAAIC,aAAc,KACtC,CAAC,GAAI,CAAEF,IAAK,EAAGC,KAAM,GAAIC,aAAc,KACvC,CAAC,GAAI,CAAEF,IAAK,EAAGC,KAAM,IAAKC,aAAc,MACxC,CAAC,GAAI,CAAEF,IAAK,EAAGC,KAAM,IAAKC,aAAc,GAAK,MAC7C,CAAC,IAAK,CAAEF,IAAK,EAAGC,KAAM,KAAMC,aAAc,OAG/BC,EAAiE,CAC5ElD,EAAG,EACHU,GAAI,EACJe,GAAI,EACJoB,GAAI,EACJM,IAAK,GCtDMC,EAA2B,SACtCC,GADsC,OAGtCA,EAAMC,QAAO,SAACC,EAAUC,GAAX,OACXD,EAAS,GAAGN,cAAgBO,EAAW,GAAGP,aACtCM,EACAC,MAGKC,EACX,SAACpF,GAAD,OACA,SAACgF,GACC,IAAMK,EAAY,YAAOL,GACnBM,EAAeN,EAAMH,EAAgB7E,IAErCuF,EACJD,EAAa,GAAGX,KAChBF,EAAyBI,EAAgB7E,IAAO,GAAG2E,KAYrD,OAXAU,EAAaR,EAAgB7E,IAAS,CACpCsF,EAAa,GACb,CACEZ,IAAKM,EAAMH,EAAgB7E,IAAO,GAAG0E,IAAM,EAC3CC,KAAMY,EACNX,aAAc5E,EAAOuF,IAMlBF,IAGEG,EACX,SADWA,EACVC,GAAD,IAA+BC,EAA/B,uDAA0C,EAA1C,OACA,WAKM,IAJJC,EAIG,uDAJKlB,EAKR,GAAIgB,GAAoB,IACtB,MAAO,CAAEG,SAAUF,EAAUG,YAAaF,GAC5C,IAAMG,EAAef,EAAyBY,GAC9C,OAAOH,EACLC,EAAmBK,EAAa,GAChCJ,EAAWI,EAAa,GAAGnB,KAFtBa,CAGLJ,EAAoBU,EAAa,GAAjCV,CAAqCO,MAarCI,EAAqB,SAACC,GAAD,OARvBC,EAUA,SAACC,GAAD,YACQC,IAAND,GAAmBA,EAAE,GAAGvB,MAAQqB,GAVlCI,EAWA,SAACC,EAAGC,GAAJ,OAAWD,EAAE,GAAGzB,cAAgB0B,EAAE,GAAG1B,aAAeyB,EAAIC,GAT1D,SAACC,GAAD,OACEA,EAAOtB,QAAsB,SAACoB,EAAGC,GAC/B,OAAOL,EAAaK,GAAML,EAAaI,GAAKD,EAAKC,EAAGC,GAAKA,EAAKD,SAC7DF,IAPL,IACEF,EACAG,GAcSI,EAA4B,SAA5BA,EACXC,GAEyB,IADzBZ,EACwB,uDADVpB,EAERS,EAAWa,EAAmBU,EAAnBV,CAA2BF,GAE5C,GAAIX,EAAU,CACZ,IAAMwB,EAAsBF,EAC1BC,EAASvB,EAAS,GAAGP,KACrBS,EAAoBF,EAAS,GAA7BE,CAAiCS,IAEnC,MAAO,CACL,CACEc,WAAYzB,EAAS,GAAKwB,EAAoB,GAAGC,WACjDC,eAAgBF,EAAoB,GAAGE,gBAEzCF,EAAoB,IAGxB,MAAO,CAAC,CAAEC,WAAY,IAAKC,eAAgBH,GAAUZ,IAwB1CgB,EAAwB,SAACpH,GAAD,OACnCA,EAAGqH,WAAWC,OAAS,GChIZC,EAAW,eCOXC,EAAoC,SAAC,GAAqB,IAAnBpB,EAAkB,EAAlBA,YAClD,OACE,6BACGA,EAAYqB,KAAI,WAA4BC,GAA5B,uBAAEC,EAAF,YAAc1C,EAAd,EAAcA,IAAd,EAAmBC,KAAnB,OACf,sBAEE/D,WACGuG,EAAI,EAAI,aAAe,YACxB,qDAJJ,UAOE,qBAAIvG,UAAU,oCAAd,UACGwG,EADH,kBAGA,oBAAIxG,UAAU,mDAAd,SACG8D,MAXL,UACUyC,EADV,YACeC,UCIVC,EAA+B,SAAC,GAAe,IAAb3G,EAAY,EAAZA,MACvC4G,EAAK,OAAG5G,QAAH,IAAGA,OAAH,EAAGA,EAAO6G,OAAO9H,GAD6B,EAET+H,mBAAiBF,GAAS,GAFjB,mBAElDG,EAFkD,KAEhCC,EAFgC,KAIzDC,qBAAU,WACRxH,EAAOZ,cAAc,CAAEE,GAAIgI,IAAoBG,YAC9C,CAACH,IANqD,IH6G1BhI,EG7G0B,EASvD+G,EAA0BiB,GAT6B,0BAQpCI,EARoC,EAQhDlB,WAAqBC,EAR2B,EAQ3BA,eAAkBf,EARS,KAazD,OAFAiC,QAAQC,MAAMlC,EAAYqB,KAAI,mCAAEc,EAAF,KAAK9B,EAAL,wBAAC,eAAiBA,GAAlB,IAAqB8B,EAAGA,QAGpD,+BACE,sBAAKpH,UAAU,gDAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,2BAAf,SACE,+BACE,uBACEqH,QAAQ,mBACRrH,UAAU,0CAFZ,+BAMA,sBAAKA,UAAU,qCAAf,UACE,qBAAKA,UAAU,uEAAf,SACE,sBAAMA,UAAU,2BAAhB,SAA4CoG,MAE9C,uBACEkB,KAAK,OACLjH,KAAK,mBACLkH,GAAG,mBACHvH,UAAU,kHACVwH,YAAY,iBACZC,MAAOZ,GAAoB,GAC3Ba,SAAU,SAACC,GACT,IAAMC,EAAUC,OAAOF,EAAEG,OAAOL,QAC/BM,MAAMH,IACLA,GAAW,GACXd,EAAoBe,OAAOF,EAAEG,OAAOL,mBAMhD,sBAAKzH,UAAU,uCAAf,UACE,sBAAKA,UAAW,gCAAhB,UACE,wDACuBgG,EAAegC,iBACnC5B,KAEFS,EAAmB,GAClB,kCHwDiBhI,EGvDGgI,EHwDlChI,EAAGqH,WAAWC,OAAStH,EAAGqH,WAAWC,QC5HnB,qBEyER,sBAAKnG,UAAW,gCAAhB,UACE,+DAC8BiH,EAAU,KAAKgB,QAAQ,GADrD,IF3EY,kBE+EXpB,EAAmB,GAClB,iCACGZ,EAAsBY,GF9EhB,2BEqFjB,qBAAK7G,UAAU,2BAAf,SACE,cAAC,EAAD,CAAwBiF,YAAaA,YCzElCiD,EAA4B,SAAC,GAAe,IAAD,IAAZpI,MACd6G,OAApBvH,EAD8C,EAC9CA,KAAMD,EADwC,EACxCA,IADwC,EAEVyH,mBAAiBxH,GAAQ,GAFf,mBAE/C+I,EAF+C,KAE/BC,EAF+B,OAIdxB,mBACtCzH,QAAOoG,GAL6C,mBAI/C8C,EAJ+C,KAIjCC,EAJiC,KAQtDvB,qBAAU,WACRxH,EACGL,WADH,2BAEQiJ,EAAiB,CAAE/I,KAAM+I,GAAmB,IAC5CE,EAAe,CAAElJ,IAAKkJ,GAAiB,KAE5CrB,YACF,CAACmB,EAAgBE,IAfkC,IJ0FrDE,EI1FqD,EAkBpDJ,EAAiB,KACb,CAAEnD,SAAU,EAAGC,YAAapB,EAA0BE,UAAMwB,GAC5D8C,GJsELE,EIrE0BF,EJsE3B,SACExD,GAMA,IAAM2D,EAAc5D,EAAqBC,EAArBD,CAClBf,GAEF,MAAO,CACLE,KAAMrD,EAAiB6H,GAASC,EAAYxD,SAC5CC,YAAauD,EAAYvD,YACzBD,SAAUwD,EAAYxD,YIlFD,IAAjBmD,GAFU,2BAIPvD,EAAsC,IAAjBuD,EAArBvD,IAJO,IAIuCb,UAAMwB,IAPvDP,EAjB8C,EAiB9CA,SAAUC,EAjBoC,EAiBpCA,YAAalB,EAjBuB,EAiBvBA,KAW/B,OAFAmD,QAAQC,MAAMlC,EAAYqB,KAAI,mCAAEc,EAAF,KAAK9B,EAAL,wBAAC,eAAiBA,GAAlB,IAAqB8B,EAAGA,QAGpD,+BACE,sBAAKpH,UAAU,gDAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,2BAAf,SACE,+BACE,uBACEqH,QAAQ,mBACRrH,UAAU,0CAFZ,6BAMA,sBAAKA,UAAU,qCAAf,UACE,qBAAKA,UAAU,uEAAf,SACE,sBAAMA,UAAU,2BAAhB,SH1DQ,mBG4DV,uBACEsH,KAAK,OACLjH,KAAK,mBACLkH,GAAG,mBACHvH,UAAU,kHACVwH,YAAY,mBACZC,MAAOU,GAAkB,GACzBT,SAAU,SAACC,GACT,IAAMC,EAAUC,OAAOF,EAAEG,OAAOL,QACZM,MAAMH,IAAYA,GAAW,GAEjCQ,EAAkBP,OAAOF,EAAEG,OAAOL,WAGtD,sBAAKzH,UAAU,+CAAf,UACE,uBAAOqH,QAAQ,WAAWrH,UAAU,UAApC,mBAGA,yBACEuH,GAAG,QACHlH,KAAK,QACLoH,MAAOY,EACPX,SAAU,SAACC,GACT,IAAMc,EAAYZ,OAAOF,EAAEG,OAAOL,OAClCa,GACGP,MAAMU,IAAcA,EAAY,GAAKA,GAAa,GAC/CA,OACAlD,IAGRvF,UAAU,8JAZZ,UAcE,2CACC0I,OAAOC,KAAKjI,GAAkB4F,KAAI,SAACiC,GAAD,OACjC,wBAAoBd,MAAOc,EAA3B,SACGA,GADUA,oBASzB,oBAAGvI,UAAU,uCAAb,gCACsBgF,EAASgD,iBAC5B5B,UAEOb,IAATxB,GAA+B,IAATA,GAAcsE,GACnC,oBAAGrI,UAAU,uCAAb,6BACmB+D,EAAKiE,iBH3Gb,qBGgHf,qBAAKhI,UAAU,2BAAf,SACE,cAAC,EAAD,CAAwBiF,YAAaA,YC/GlC2D,EAAO,WAClB,IAAM9I,EAAQR,IAEd,OACE,qCACkB,kBAAfQ,EAAMO,MAA4B,cAAC,EAAD,CAAmBP,MAAOA,IAC7C,eAAfA,EAAMO,MAAyB,cAAC,EAAD,CAAgBP,MAAOA,KACvC,IAAfA,EAAMO,MAAkB,cAAC,EAAD,QCVlBwI,EAAS,kBACpB,wBAAQ7I,UAAU,yFAAlB,SACE,mBACEA,UAAU,0EACV8I,KAAK,iCACLhB,OAAO,SACPiB,IAAI,aAJN,wBCiBWC,MAff,WACE,OACE,cAAC3J,EAAD,UACE,sBAAKW,UAAU,uCAAf,UACE,cAAC,EAAD,UACE,qBAAKA,UAAU,oDAAf,SACE,cAAC,EAAD,QAGJ,cAAC,EAAD,UCHYiJ,QACW,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZJC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/C,QAAQ+C,MAAMA,EAAMC,c","file":"static/js/main.59c38dad.chunk.js","sourcesContent":["import { createRouter, defineRoute, param } from \"type-route\";\n\nexport const { RouteProvider, useRoute, routes } = createRouter({\n  maxMultiplier: defineRoute(\n    {\n      pp: param.query.optional.number,\n    },\n    () => \"/maxMult\"\n  ),\n  requiredPP: defineRoute(\n    {\n      lvl: param.query.optional.number,\n      mult: param.query.optional.number,\n    },\n    () => \"/requiredPP\"\n  ),\n});\n","import { FC } from \"react\";\nimport { Disclosure } from \"@headlessui/react\";\nimport { routes, useRoute } from \"../utils/router\";\n\nimport { MenuIcon, XIcon } from \"@heroicons/react/outline\";\n\ninterface Props {}\n\nconst activeNavLink =\n  \"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium\";\nconst inactiveNavLink =\n  \"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\";\n\nconst activeMobileNavLink =\n  \"bg-gray-900 text-white block px-3 py-2 rounded-md text-base font-medium\";\nconst inactiveMobileNavLink =\n  \"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\";\n\nexport const Header: FC<Props> = ({ children }) => {\n  const route = useRoute();\n\n  return (\n    <div>\n      <Disclosure as=\"nav\" className=\"bg-gray-800\">\n        {({ open }) => (\n          <>\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n              <div className=\"flex items-center justify-between h-16\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0\">\n                    <img className=\"h-8 w-8\" src=\"/prest.png\" alt=\"PP\" />\n                  </div>\n                  <div className=\"hidden md:block\">\n                    <div className=\"ml-10 flex items-baseline space-x-4\">\n                      <a\n                        {...routes.maxMultiplier().link}\n                        className={\n                          route.name === \"maxMultiplier\"\n                            ? activeNavLink\n                            : inactiveNavLink\n                        }\n                      >\n                        Max Multiplier\n                      </a>\n                      <a\n                        {...routes.requiredPP().link}\n                        className={\n                          route.name === \"requiredPP\"\n                            ? activeNavLink\n                            : inactiveNavLink\n                        }\n                      >\n                        Required PP\n                      </a>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"-mr-2 flex md:hidden\">\n                  {/* Mobile menu button */}\n                  <Disclosure.Button className=\"bg-gray-800 inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n                    <span className=\"sr-only\">Open main menu</span>\n                    {open ? (\n                      <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                    ) : (\n                      <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                    )}\n                  </Disclosure.Button>\n                </div>\n              </div>\n            </div>\n            <Disclosure.Panel className=\"md:hidden\">\n              <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">\n                <Disclosure.Button\n                  as=\"a\"\n                  {...routes.maxMultiplier().link}\n                  className={\n                    route.name === \"maxMultiplier\"\n                      ? activeMobileNavLink\n                      : inactiveMobileNavLink\n                  }\n                  aria-controls=\"nav\"\n                >\n                  Max Multiplier\n                </Disclosure.Button>\n                <Disclosure.Button\n                  as=\"a\"\n                  {...routes.requiredPP().link}\n                  className={\n                    route.name === \"requiredPP\"\n                      ? activeMobileNavLink\n                      : inactiveMobileNavLink\n                  }\n                >\n                  Required PP\n                </Disclosure.Button>\n              </div>\n            </Disclosure.Panel>\n          </>\n        )}\n      </Disclosure>\n\n      <header className=\"bg-white shadow\">\n        <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900\">\n            {route.name === \"maxMultiplier\" ? \"Max Multiplier\" : \"Required PP\"}\n          </h1>\n        </div>\n      </header>\n      <main>\n        <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">{children}</div>\n      </main>\n    </div>\n  );\n};\n","export const prestigeLevels = [\n  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\n  23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\n  42, 43, 44, 45, 46, 47, 48, 49, 50,\n] as const;\n\nexport const moneyPerPrestige: Record<PrestigeLevel, Dollars> = {\n  1: 12000,\n  2: 56000,\n  3: 144000,\n  4: 288000,\n  5: 500000,\n  6: 792000,\n  7: 1176000,\n  8: 1664000,\n  9: 2268000,\n  10: 3000000,\n  11: 3872000,\n  12: 4896000,\n  13: 6084000,\n  14: 7448000,\n  15: 9000000,\n  16: 10752000,\n  17: 12716000,\n  18: 14904000,\n  19: 17328000,\n  20: 20000000,\n  21: 22932000,\n  22: 26136000,\n  23: 29624000,\n  24: 33408000,\n  25: 37500000,\n  26: 41912000,\n  27: 46656000,\n  28: 51744000,\n  29: 57188000,\n  30: 63000000,\n  31: 69192000,\n  32: 75776000,\n  33: 82764000,\n  34: 90168000,\n  35: 98000000,\n  36: 106272000,\n  37: 114996000,\n  38: 124184000,\n  39: 133848000,\n  40: 144000000,\n  41: 154652000,\n  42: 165816000,\n  43: 177504000,\n  44: 189728000,\n  45: 202500000,\n  46: 215832000,\n  47: 229736000,\n  48: 244224000,\n  49: 259308000,\n  50: 275000000,\n};\n\nexport const initialPrestigeMultCosts: PrestigeMultipliersWithValue = [\n  [5, { qty: 0, cost: 10, multPerPrest: 5 / 10 }],\n  [15, { qty: 0, cost: 50, multPerPrest: 15 / 50 }],\n  [30, { qty: 0, cost: 250, multPerPrest: 30 / 250 }],\n  [50, { qty: 0, cost: 750, multPerPrest: 50 / 750 }],\n  [100, { qty: 0, cost: 2500, multPerPrest: 100 / 2500 }],\n];\n\nexport const multiplierIndex: Record<PrestigeMultiplier, 0 | 1 | 2 | 3 | 4> = {\n  5: 0,\n  15: 1,\n  30: 2,\n  50: 3,\n  100: 4,\n};\n\nexport type PrestigeMultiplierCosts<\n  M extends PrestigeMultiplier = PrestigeMultiplier\n> = [\n  multiplier: M,\n  values: { qty: number; cost: PrestigePoints; multPerPrest: Multiplier }\n];\n\nexport type PrestigeMultipliersWithValue = [\n  PrestigeMultiplierCosts<5>,\n  PrestigeMultiplierCosts<15>,\n  PrestigeMultiplierCosts<30>,\n  PrestigeMultiplierCosts<50>,\n  PrestigeMultiplierCosts<100>\n];\n\nexport type PrestigeMultiplier = 5 | 15 | 30 | 50 | 100;\n\nexport type PrestigePoints = number;\n\nexport type Dollars = number;\n\nexport type Multiplier = number;\n\nexport type PrestigeLevel = typeof prestigeLevels[number];\n","import {\n  PrestigeMultiplier,\n  PrestigeMultipliersWithValue,\n  PrestigeMultiplierCosts,\n  multiplierIndex,\n  initialPrestigeMultCosts,\n  PrestigePoints,\n  PrestigeLevel,\n  Dollars,\n  moneyPerPrestige,\n  Multiplier,\n} from \"./constants\";\n\nexport type MaxMultiplierResult = [\n  result: { multiplier: Multiplier; remainingPrest: PrestigePoints },\n  multipliers: PrestigeMultipliersWithValue\n];\n\nexport const cheapestMultiplierOption = (\n  costs: PrestigeMultipliersWithValue\n): PrestigeMultiplierCosts =>\n  costs.reduce((cheapest, multOption) =>\n    cheapest[1].multPerPrest >= multOption[1].multPerPrest\n      ? cheapest\n      : multOption\n  );\n\nexport const incrementMultiplier =\n  (mult: PrestigeMultiplier) =>\n  (costs: PrestigeMultipliersWithValue): PrestigeMultipliersWithValue => {\n    const updatedCosts = [...costs];\n    const prevMultVals = costs[multiplierIndex[mult]];\n\n    const newCost =\n      prevMultVals[1].cost +\n      initialPrestigeMultCosts[multiplierIndex[mult]][1].cost;\n    updatedCosts[multiplierIndex[mult]] = [\n      prevMultVals[0],\n      {\n        qty: costs[multiplierIndex[mult]][1].qty + 1,\n        cost: newCost,\n        multPerPrest: mult / newCost,\n      },\n    ];\n\n    // TODO: would be nice to avoid the typecast but this should be fine given that mult is valid\n    // one day i'll learn monocle-ts :\\\n    return updatedCosts as PrestigeMultipliersWithValue;\n  };\n\nexport const minPrestigeToGetMult =\n  (wantedMultiplier: Multiplier, prevCost = 0) =>\n  (\n    mults = initialPrestigeMultCosts\n  ): {\n    prestige: PrestigePoints;\n    multipliers: PrestigeMultipliersWithValue;\n  } => {\n    if (wantedMultiplier <= 100)\n      return { prestige: prevCost, multipliers: mults };\n    const cheapestMult = cheapestMultiplierOption(mults);\n    return minPrestigeToGetMult(\n      wantedMultiplier - cheapestMult[0],\n      prevCost + cheapestMult[1].cost\n    )(incrementMultiplier(cheapestMult[0])(mults));\n  };\n\nconst filterMax =\n  <M>(\n    isValidValue: (value: M | undefined) => value is M,\n    sort: (a: M, b: M) => M\n  ) =>\n  (values: M[]): M | undefined =>\n    values.reduce<M | undefined>((a, x) => {\n      return isValidValue(x) ? (isValidValue(a) ? sort(a, x) : x) : a;\n    }, undefined);\n\nconst cheapestMultiplier = (maxCost: PrestigePoints) =>\n  filterMax<PrestigeMultiplierCosts>(\n    (v): v is PrestigeMultiplierCosts =>\n      v !== undefined && v[1].cost <= maxCost,\n    (a, x) => (a[1].multPerPrest >= x[1].multPerPrest ? a : x)\n  );\n\nexport const maxMultFromPrestigePoints = (\n  points: PrestigePoints,\n  multipliers = initialPrestigeMultCosts\n): MaxMultiplierResult => {\n  const cheapest = cheapestMultiplier(points)(multipliers);\n\n  if (cheapest) {\n    const subsequentIteration = maxMultFromPrestigePoints(\n      points - cheapest[1].cost,\n      incrementMultiplier(cheapest[0])(multipliers)\n    );\n    return [\n      {\n        multiplier: cheapest[0] + subsequentIteration[0].multiplier,\n        remainingPrest: subsequentIteration[0].remainingPrest,\n      },\n      subsequentIteration[1],\n    ];\n  }\n  return [{ multiplier: 100, remainingPrest: points }, multipliers];\n};\n\nexport const dollarsNeededForMult =\n  (level: PrestigeLevel) =>\n  (\n    wantedMultiplier: number\n  ): {\n    cost: Dollars;\n    multipliers: PrestigeMultipliersWithValue;\n    prestige: PrestigePoints;\n  } => {\n    const minPrestige = minPrestigeToGetMult(wantedMultiplier)(\n      initialPrestigeMultCosts\n    );\n    return {\n      cost: moneyPerPrestige[level] * minPrestige.prestige,\n      multipliers: minPrestige.multipliers,\n      prestige: minPrestige.prestige,\n    };\n  };\n\nexport const coinsForPrestige = (pp: PrestigePoints): number =>\n  pp.toString().length * pp.toString().length;\nexport const briefcasesForPrestige = (pp: PrestigePoints): number =>\n  pp.toString().length - 1;\n\n// TODO: come back to address the perf issues here\n// export const maxMultFromPrestigePoints = (\n//   points: PrestigePoints,\n//   multipliers = initialPrestigeMultCosts\n// ): [\n//   result: { multiplier: Multiplier; remainingPrest: PrestigePoints },\n//   multipliers: PrestigeMultipliersWithValue\n// ] =>\n//   pipe(\n//     multipliers,\n//     A.filter(([_, { cost }]) => points >= cost),\n//     NEA.fromArray,\n//     O.chain((neMultipliers) => {\n//       const initialMult = NEA.head(neMultipliers);\n//       return pipe(\n//         neMultipliers,\n//         NEA.tail,\n//         NEA.fromArray,\n//         O.match(\n//           () => O.some(initialMult),\n//           (otherMults) =>\n//             O.some(\n//               NEA.reduce(initialMult, Ord.max(ordMultiplierCost))(otherMults)\n//             )\n//         )\n//       );\n//     }),\n//     O.match(\n//       () => [{ multiplier: 0, remainingPrest: points }, multipliers],\n//       (cheapestMult) => {\n//         const subsequentIteration = maxMultFromPrestigePoints(\n//           points - cheapestMult[1].cost,\n//           incrementMultiplier(cheapestMult[0])(multipliers)\n//         );\n//         return [\n//           {\n//             multiplier: cheapestMult[0] + subsequentIteration[0].multiplier,\n//             remainingPrest: subsequentIteration[0].remainingPrest,\n//           },\n//           subsequentIteration[1],\n//         ];\n//       }\n//     )\n//   );\n","export const PRESTIGE = \"💠\";\nexport const MULTIPLIER = \"💹\";\nexport const COIN = \"🪙\";\nexport const BALANCE = \"💰\";\nexport const BRIEFCASE = \"💼\";\n","import { FC } from \"react\";\nimport { PrestigeMultipliersWithValue } from \"../constants\";\n\ninterface Props {\n  multipliers: PrestigeMultipliersWithValue;\n}\n\nexport const PrestigeMultiplierCard: FC<Props> = ({ multipliers }) => {\n  return (\n    <dl>\n      {multipliers.map(([multSize, { qty, cost }], i) => (\n        <div\n          key={`${i}-${multSize}`}\n          className={\n            (i % 2 ? \"bg-gray-50\" : \"bg-white\") +\n            \" px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\"\n          }\n        >\n          <dt className=\"text-sm font-medium text-gray-500\">\n            {multSize}% Multiplier\n          </dt>\n          <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n            {qty}\n          </dd>\n        </div>\n      ))}\n    </dl>\n  );\n};\n","import * as React from \"react\";\nimport { FC, useEffect, useState } from \"react\";\nimport { Route } from \"type-route\";\nimport {\n  briefcasesForPrestige,\n  coinsForPrestige,\n  maxMultFromPrestigePoints,\n} from \"../calculations\";\nimport { BRIEFCASE, COIN, MULTIPLIER, PRESTIGE } from \"../constants/emojis\";\nimport { routes } from \"../utils/router\";\nimport { PrestigeMultiplierCard } from \"./PrestigeMultiplierCard\";\n\ninterface Props {\n  route?: Route<typeof routes.maxMultiplier>;\n}\n\nexport const MaxMultiplierForm: FC<Props> = ({ route }) => {\n  const urlPP = route?.params.pp;\n  const [startingPrestige, setStartingPrestige] = useState<number>(urlPP || 0);\n\n  useEffect(() => {\n    routes.maxMultiplier({ pp: startingPrestige }).replace();\n  }, [startingPrestige]);\n\n  const [{ multiplier: maxMult, remainingPrest }, multipliers] =\n    maxMultFromPrestigePoints(startingPrestige);\n\n  console.table(multipliers.map(([m, v]) => ({ ...v, m: m })));\n\n  return (\n    <form>\n      <div className=\"bg-white shadow overflow-hidden sm:rounded-lg\">\n        <div className=\"px-4 py-5 sm:px-4\">\n          <div className=\"border-b border-gray-200\">\n            <h3>\n              <label\n                htmlFor=\"startingPrestige\"\n                className=\"block text-sm font-medium text-gray-700\"\n              >\n                Starting Prestige\n              </label>\n              <div className=\"mt-1 relative rounded-md shadow-sm\">\n                <div className=\"absolute inset-y-0 left-0 pl-1 flex items-center pointer-events-none\">\n                  <span className=\"text-gray-500 sm:text-sm\">{PRESTIGE}</span>\n                </div>\n                <input\n                  type=\"text\"\n                  name=\"startingPrestige\"\n                  id=\"startingPrestige\"\n                  className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full p-1 pl-7 pr-12 sm:text-md border-gray-300 rounded-md\"\n                  placeholder=\"Enter Prestige\"\n                  value={startingPrestige || \"\"}\n                  onChange={(e) => {\n                    const userNum = Number(e.target.value);\n                    !isNaN(userNum) &&\n                      userNum > -1 &&\n                      setStartingPrestige(Number(e.target.value));\n                  }}\n                />\n              </div>\n            </h3>\n          </div>\n          <div className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n            <div className={\"flex flex-row justify-between\"}>\n              <span>\n                Remaining Prestige: {remainingPrest.toLocaleString()}\n                {PRESTIGE}\n              </span>\n              {startingPrestige > 0 && (\n                <span>\n                  {coinsForPrestige(startingPrestige)}\n                  {COIN}\n                </span>\n              )}\n            </div>\n            <div className={\"flex flex-row justify-between\"}>\n              <span>\n                TotalPrestige Multiplier: {(maxMult / 100).toFixed(2)}x\n                {MULTIPLIER}\n              </span>\n              {startingPrestige > 0 && (\n                <span>\n                  {briefcasesForPrestige(startingPrestige)}\n                  {BRIEFCASE}\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"border-t border-gray-200\">\n          <PrestigeMultiplierCard multipliers={multipliers} />\n        </div>\n      </div>\n    </form>\n  );\n};\n","import * as React from \"react\";\nimport { FC, useEffect, useState } from \"react\";\nimport { dollarsNeededForMult, minPrestigeToGetMult } from \"../calculations\";\nimport { BALANCE, MULTIPLIER, PRESTIGE } from \"../constants/emojis\";\nimport { PrestigeMultiplierCard } from \"./PrestigeMultiplierCard\";\nimport {\n  initialPrestigeMultCosts,\n  moneyPerPrestige,\n  PrestigeLevel,\n} from \"../constants\";\nimport { routes } from \"../utils/router\";\nimport { Route } from \"type-route\";\n\ninterface Props {\n  route: Route<typeof routes.requiredPP>;\n}\n\nexport const RequiredPPForm: FC<Props> = ({ route }) => {\n  const { mult, lvl } = route.params;\n  const [goalMultiplier, setGoalMultiplier] = useState<number>(mult || 0);\n\n  const [currentLevel, setCurrentLevel] = useState<number | undefined>(\n    lvl || undefined\n  );\n\n  useEffect(() => {\n    routes\n      .requiredPP({\n        ...(goalMultiplier ? { mult: goalMultiplier } : {}),\n        ...(currentLevel ? { lvl: currentLevel } : {}),\n      })\n      .replace();\n  }, [goalMultiplier, currentLevel]);\n\n  const { prestige, multipliers, cost } =\n    goalMultiplier > 1500\n      ? { prestige: 0, multipliers: initialPrestigeMultCosts, cost: undefined }\n      : currentLevel\n      ? dollarsNeededForMult(currentLevel as PrestigeLevel)(\n          goalMultiplier * 100\n        )\n      : { ...minPrestigeToGetMult(goalMultiplier * 100)(), cost: undefined };\n\n  console.table(multipliers.map(([m, v]) => ({ ...v, m: m })));\n\n  return (\n    <form>\n      <div className=\"bg-white shadow overflow-hidden sm:rounded-lg\">\n        <div className=\"px-4 py-5 sm:px-4\">\n          <div className=\"border-b border-gray-200\">\n            <h3>\n              <label\n                htmlFor=\"startingPrestige\"\n                className=\"block text-sm font-medium text-gray-700\"\n              >\n                Goal Multiplier\n              </label>\n              <div className=\"mt-1 relative rounded-md shadow-sm\">\n                <div className=\"absolute inset-y-0 left-0 pl-1 flex items-center pointer-events-none\">\n                  <span className=\"text-gray-500 sm:text-sm\">{MULTIPLIER}</span>\n                </div>\n                <input\n                  type=\"text\"\n                  name=\"startingPrestige\"\n                  id=\"startingPrestige\"\n                  className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full p-1 pl-7 pr-12 sm:text-md border-gray-300 rounded-md\"\n                  placeholder=\"Enter Multiplier\"\n                  value={goalMultiplier || \"\"}\n                  onChange={(e) => {\n                    const userNum = Number(e.target.value);\n                    const isValidNum = !isNaN(userNum) && userNum > -1;\n\n                    if (isValidNum) setGoalMultiplier(Number(e.target.value));\n                  }}\n                />\n                <div className=\"absolute inset-y-0 right-0 flex items-center\">\n                  <label htmlFor=\"currency\" className=\"sr-only\">\n                    level\n                  </label>\n                  <select\n                    id=\"level\"\n                    name=\"level\"\n                    value={currentLevel}\n                    onChange={(e) => {\n                      const userLevel = Number(e.target.value);\n                      setCurrentLevel(\n                        !isNaN(userLevel) && userLevel > 0 && userLevel <= 50\n                          ? userLevel\n                          : undefined\n                      );\n                    }}\n                    className=\"focus:ring-indigo-500 focus:border-indigo-500 h-full py-0 pl-2 pr-7 border-gray border-l  bg-transparent text-gray-500 sm:text-sm rounded-md rounded-l-none\"\n                  >\n                    <option>level</option>\n                    {Object.keys(moneyPerPrestige).map((level) => (\n                      <option key={level} value={level}>\n                        {level}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </h3>\n          </div>\n          <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n            Required Prestige: {prestige.toLocaleString()}\n            {PRESTIGE}\n          </p>\n          {cost !== undefined && cost !== 0 && currentLevel && (\n            <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n              Required Money: {cost.toLocaleString()}\n              {BALANCE}\n            </p>\n          )}\n        </div>\n        <div className=\"border-t border-gray-200\">\n          <PrestigeMultiplierCard multipliers={multipliers} />\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React from \"react\";\nimport { useRoute } from \"../utils/router\";\nimport { MaxMultiplierForm } from \"./MaxMultiplierForm\";\nimport { RequiredPPForm } from \"./RequiredPPForm\";\n\nexport const Page = () => {\n  const route = useRoute();\n\n  return (\n    <>\n      {route.name === \"maxMultiplier\" && <MaxMultiplierForm route={route} />}\n      {route.name === \"requiredPP\" && <RequiredPPForm route={route} />}\n      {route.name === false && <MaxMultiplierForm />}\n    </>\n  );\n};\n","import React from \"react\";\n\nexport const Footer = () => (\n  <footer className=\"flex flex-row justify-start max-w-7xl mx-auto px-4 py-6 sm:py-4 sm:px-6 lg:px-8 w-full\">\n    <a\n      className=\"text-xs font-mono text-purple-900 hover:text-purple-600 hover:underline\"\n      href=\"https://github.com/marcmartino\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      @marmar\n    </a>\n  </footer>\n);\n","import React from \"react\";\nimport { Header } from \"./components/Header\";\nimport { RouteProvider } from \"./utils/router\";\nimport { Page } from \"./components/Page\";\nimport { Footer } from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <RouteProvider>\n      <div className=\"flex h-full flex-col justify-between\">\n        <Header>\n          <div className=\"flex flex-col h-full items-center justify-center \">\n            <Page />\n          </div>\n        </Header>\n        <Footer />\n      </div>\n    </RouteProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}